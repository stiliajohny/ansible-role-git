---
- name: Run install tasks
  include_tasks: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution_release | lower }}.yml"
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_distribution | lower }}.yml"
    - "{{ ansible_os_family | lower }}.yml"
  ignore_errors: true

- name: Copy gitconfig
  template:
    src: gitconfig.j2
    dest: "{{ ( git_users_loop.skell is true | ternary(git_users_loop.home, git_users_loop.home  )) if git_users_loop.skel is true  else '/tmp/' }}.gitconfig"
    mode: 0644
  become: true
  with_items: "{{ users }}"
  loop_control:
    loop_var: git_users_loop

# crete a task that creates a file under the home directory
- name: Create a file
  file:
    path: "{{ users[0].home }}/.ssh/known_hosts"
    state: touch
    owner: "{{ users[0].name }}"
  become: true
  become_user: "{{ users[0].name }}"

- name: Test ssh to github
  shell: "yes | ssh git@github.com  -o StrictHostKeyChecking=no "
  register: ssh_works
  ignore_errors: true

- name: Clone the  Github repos
  git:
    repo: '{{ "git@github.com:" if user1_enabled.failed is true else "https://github.com/" }}{{ github_repo_item.split("/")[0] | lower }}/{{ github_repo_item.split("/")[1] | lower }}.git'
    dest: '{{ destination }}{{ github_repo_item.split("/")[1] | lower }}'
    clone: yes
    update: yes
    key_file: "{{ git_ssh_private | default(omit) }}"
    accept_hostkey: true
    depth: 1
    track_submodules: yes
    remote: origin
    force: "{{ force_git_clone | default(false) }}"
  with_items: "{{ github_repo_name }}"
  become: true
  become_user: "{{ users[0].name }}"
  loop_control:
    loop_var: "github_repo_item"
  ignore_errors: true
  when: github_repo_name is defined
# - name: Clone the Gitlab repos - Number {{ gitlab_repo_name|length }}
#   git:
#     repo: 'https://gitlab.com/{{ gitlab_repo_item.split("/")[0] | lower }}/{{ gitlab_repo_item.split("/")[1] | lower }}.git'
#     dest: '{{ destination }}{{ github_repo_item.split("/")[1] | lower }}'
#     clone: yes
#     update: yes
#     version: master
#     key_file: "{{ git_ssh_private | default(omit) }}"
#     accept_hostkey: true
#     remote: origin
#     force: "{{ force_git_clone }}"
#   with_items: "{{ gitlab_repo_name }}"
#   become: true
#   become_user: "{{ users[0].name }}"
#   loop_control:
#     loop_var: gitlab_repo_item
#   ignore_errors: true
#   when: gitlab_repo_name is defined
